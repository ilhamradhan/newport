{"ast":null,"code":"var _jsxFileName = \"E:\\\\Akbar\\\\Code\\\\newport\\\\src\\\\components\\\\projects\\\\Projects.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Projects.css';\nimport { Fade } from 'react-reveal';\nimport ApolloClient, { gql } from 'apollo-boost';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { featured_projects } from '../../data/featured_projects.json';\nimport Project from '../project/Project';\nimport Section from '../section/Section';\nimport FeaturedProject from '../featuredProject/FeaturedProject';\nconst useStyles = makeStyles(theme => ({\n  moreProjects: {\n    '&': {\n      margin: '20px auto',\n      backgroundColor: '#39b175',\n      boxShadow: 'none',\n      '&:hover': {\n        backgroundColor: '#0be779',\n        boxShadow: 'none'\n      }\n    },\n    '& > *': {\n      color: 'white',\n      padding: 4,\n      fontSize: '15px',\n      fontWeight: '600'\n    }\n  }\n}));\nconst client = new ApolloClient({\n  uri: 'https://api.github.com/graphql',\n  request: operation => {\n    console.log(`Token is ${process.env.REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN}`);\n    operation.setContext({\n      headers: {\n        authorization: `Bearer ${process.env.REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN}`\n      }\n    });\n  }\n});\nconst queryInfo = {\n  owner: 'jigalin',\n  repositories: ['portfolio-landing-page', 'react-pokedex', 'JS-DOM-for-beginners']\n};\nconst query = gql`\n  fragment repoProperties on Repository {\n    name \n    description\n    url\n    id\n    diskUsage\n    languages(first: 2, orderBy: { field: SIZE, direction: DESC }) {\n      nodes {\n        name\n        color\n      }\n    }\n  }\n\n  {\n    user(login: \"${queryInfo.owner}\") {\n      ${queryInfo.repositories.map((repo, index) => `repo${index + 1}: repository(name: \"${repo}\") {\n        ...repoProperties\n      }`).join('\\n')}\n    }\n  }`;\n\nconst Projects = () => {\n  const [githubProjects, setGithubProjects] = useState([]);\n  const [loadProjectsError, setLoadProjectsError] = useState(null);\n  const classes = useStyles();\n  useEffect(() => {\n    getProjects();\n  }, []);\n\n  const getProjects = async () => {\n    try {\n      const queryResult = await client.query({\n        query\n      });\n      setGithubProjects(queryResult.data.user);\n      setLoadProjectsError(false);\n    } catch (error) {\n      console.log(error);\n      setLoadProjectsError(true);\n    }\n  };\n\n  if (loadProjectsError === false) {\n    return /*#__PURE__*/React.createElement(Section, {\n      title: \"Projects\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"projects-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"projects-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, featured_projects.map(featuredProject => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: `featured-project-${featuredProject.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Fade, {\n        bottom: true,\n        duration: 1000,\n        distance: \"20px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(FeaturedProject, {\n        name: featuredProject.name,\n        link: featuredProject.link,\n        description: featuredProject.description,\n        colour: featuredProject.colour,\n        languages: featuredProject.languages,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      })));\n    }), Object.keys(githubProjects).map(repo => {\n      if (githubProjects[repo].name) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: githubProjects[repo].name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Fade, {\n          bottom: true,\n          duration: 1000,\n          distance: \"20px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Project, {\n          project: githubProjects[repo],\n          type: 'github',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 23\n          }\n        })));\n      } else {\n        return null;\n      }\n    })), /*#__PURE__*/React.createElement(Fade, {\n      bottom: true,\n      duration: 1000,\n      distance: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"more-projects-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"project-link\",\n      href: 'https://github.com/jigalin',\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: classes.moreProjects,\n      type: \"button\",\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }, \"more projects\"))))));\n  } else {\n    return null;\n  }\n};\n\nexport default Projects;","map":{"version":3,"sources":["E:/Akbar/Code/newport/src/components/projects/Projects.js"],"names":["React","useState","useEffect","Fade","ApolloClient","gql","Button","makeStyles","featured_projects","Project","Section","FeaturedProject","useStyles","theme","moreProjects","margin","backgroundColor","boxShadow","color","padding","fontSize","fontWeight","client","uri","request","operation","console","log","process","env","REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN","setContext","headers","authorization","queryInfo","owner","repositories","query","map","repo","index","join","Projects","githubProjects","setGithubProjects","loadProjectsError","setLoadProjectsError","classes","getProjects","queryResult","data","user","error","featuredProject","id","name","link","description","colour","languages","Object","keys"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport './Projects.css'\r\nimport { Fade } from 'react-reveal'\r\nimport ApolloClient, { gql } from 'apollo-boost'\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { featured_projects } from '../../data/featured_projects.json'\r\nimport Project from '../project/Project'\r\nimport Section from '../section/Section'\r\nimport FeaturedProject from '../featuredProject/FeaturedProject'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  moreProjects: {\r\n    '&': {\r\n      margin: '20px auto',\r\n      backgroundColor: '#39b175',\r\n      boxShadow: 'none',\r\n      '&:hover': {\r\n        backgroundColor: '#0be779',\r\n        boxShadow: 'none',\r\n      },\r\n    },\r\n    '& > *': {\r\n      color: 'white',\r\n      padding: 4,\r\n      fontSize: '15px',\r\n      fontWeight: '600',\r\n    },\r\n  },\r\n}))\r\n\r\nconst client = new ApolloClient({\r\n  uri: 'https://api.github.com/graphql',\r\n  request: (operation) => {\r\n    console.log(\r\n      `Token is ${process.env.REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN}`\r\n    )\r\n    operation.setContext({\r\n      headers: {\r\n        authorization: `Bearer ${process.env.REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN}`,\r\n      },\r\n    })\r\n  },\r\n})\r\n\r\nconst queryInfo = {\r\n  owner: 'jigalin',\r\n  repositories: [\r\n    'portfolio-landing-page',\r\n    'react-pokedex',\r\n    'JS-DOM-for-beginners',\r\n  ],\r\n}\r\n\r\nconst query = gql`\r\n  fragment repoProperties on Repository {\r\n    name \r\n    description\r\n    url\r\n    id\r\n    diskUsage\r\n    languages(first: 2, orderBy: { field: SIZE, direction: DESC }) {\r\n      nodes {\r\n        name\r\n        color\r\n      }\r\n    }\r\n  }\r\n\r\n  {\r\n    user(login: \"${queryInfo.owner}\") {\r\n      ${queryInfo.repositories\r\n        .map(\r\n          (repo, index) => `repo${index + 1}: repository(name: \"${repo}\") {\r\n        ...repoProperties\r\n      }`\r\n        )\r\n        .join('\\n')}\r\n    }\r\n  }`\r\n\r\nconst Projects = () => {\r\n  const [githubProjects, setGithubProjects] = useState([])\r\n  const [loadProjectsError, setLoadProjectsError] = useState(null)\r\n\r\n  const classes = useStyles()\r\n\r\n  useEffect(() => {\r\n    getProjects()\r\n  }, [])\r\n\r\n  const getProjects = async () => {\r\n    try {\r\n      const queryResult = await client.query({\r\n        query,\r\n      })\r\n      setGithubProjects(queryResult.data.user)\r\n      setLoadProjectsError(false)\r\n    } catch (error) {\r\n      console.log(error)\r\n      setLoadProjectsError(true)\r\n    }\r\n  }\r\n\r\n  if (loadProjectsError === false) {\r\n    return (\r\n      <Section title=\"Projects\">\r\n        <div className=\"projects-content\">\r\n          <ul className=\"projects-list\">\r\n            {featured_projects.map((featuredProject) => {\r\n              return (\r\n                <li key={`featured-project-${featuredProject.id}`}>\r\n                  <Fade bottom duration={1000} distance=\"20px\">\r\n                    <FeaturedProject\r\n                      name={featuredProject.name}\r\n                      link={featuredProject.link}\r\n                      description={featuredProject.description}\r\n                      colour={featuredProject.colour}\r\n                      languages={featuredProject.languages}\r\n                    />\r\n                  </Fade>\r\n                </li>\r\n              )\r\n            })}\r\n            {Object.keys(githubProjects).map((repo) => {\r\n              if (githubProjects[repo].name) {\r\n                return (\r\n                  <li key={githubProjects[repo].name}>\r\n                    <Fade bottom duration={1000} distance=\"20px\">\r\n                      <Project project={githubProjects[repo]} type={'github'} />\r\n                    </Fade>\r\n                  </li>\r\n                )\r\n              } else {\r\n                return null\r\n              }\r\n            })}\r\n          </ul>\r\n          <Fade bottom duration={1000} distance=\"20px\">\r\n            <div className=\"more-projects-wrapper\">\r\n              <a\r\n                className=\"project-link\"\r\n                href={'https://github.com/jigalin'}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <Button\r\n                  className={classes.moreProjects}\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                >\r\n                  more projects\r\n                </Button>\r\n              </a>\r\n            </div>\r\n          </Fade>\r\n        </div>\r\n      </Section>\r\n    )\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default Projects\r\n"]},"metadata":{},"sourceType":"module"}